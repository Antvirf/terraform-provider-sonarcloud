name: Prepare Release

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: [self-hosted, prd]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: '1.15'
      - name: Build release binaries
        run: make release
      - name: Prepare Release
        id: prepare_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.ORG_FETCH_PAT }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Test Test
          draft: true
          prerelease: true
      # TODO: use matrix strategy?
      - name: Add linux binaries to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.ORG_FETCH_PAT }}
        with:
          upload_url: ${{ steps.prepare_release.outputs.upload_url }}
          asset_path: ./bin/terraform-provider-sonarcloud_0.1.0_linux_amd64
          asset_name: terraform-provider-sonarcloud_0.1.0_linux_amd64
          asset_content_type: application/octet-stream
      - name: Add mac binaries to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.ORG_FETCH_PAT }}
        with:
          upload_url: ${{ steps.prepare_release.outputs.upload_url }}
          asset_path: ./bin/terraform-provider-sonarcloud_0.1.0_darwin_amd64
          asset_name: terraform-provider-sonarcloud_0.1.0_darwin_amd64
          asset_content_type: application/octet-stream
      - name: Add window binaries to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.ORG_FETCH_PAT }}
        with:
          upload_url: ${{ steps.prepare_release.outputs.upload_url }}
          asset_path: ./bin/terraform-provider-sonarcloud_0.1.0_windows_amd64
          asset_name: terraform-provider-sonarcloud_0.1.0_windows_amd64
          asset_content_type: application/octet-stream